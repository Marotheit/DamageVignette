plugins {
    id 'fabric-loom' version '1.9-SNAPSHOT'
    id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

base {
    archivesName = project.archives_base_name
}

repositories {
    maven {
        name = "Terraformers"
        url = "https://maven.terraformersmc.com/"
    }
    maven {
        name = "Cloth Config"
        url = "https://maven.shedaniel.me/"
    }
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.fabric_loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_api_version}"
    modImplementation "com.terraformersmc:modmenu:${project.modmenu_version}"
    modImplementation "me.shedaniel.cloth:cloth-config-fabric:${project.cloth_config_version}"
}

processResources {
    inputs.property "mod_version", project.mod_version
    inputs.property "minecraft_version", project.minecraft_version
    inputs.property "fabric_loader_version", project.fabric_loader_version
    inputs.property "fabric_api_version", project.fabric_api_version
    inputs.property "modmenu_version", project.modmenu_version
    inputs.property "cloth_config_version", project.cloth_config_version
    filteringCharset "UTF-8"

    filesMatching("fabric.mod.json") {
        expand "mod_version": project.mod_version,
                "minecraft_version": project.minecraft_version,
                "fabric_loader_version": project.fabric_loader_version,
                "fabric_api_version": project.fabric_api_version,
                "modmenu_version": project.modmenu_version,
                "cloth_config_version": project.cloth_config_version
    }
}

def targetJavaVersion = 21
tasks.withType(JavaCompile).configureEach {
    it.options.encoding = "UTF-8"
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        it.options.release.set(targetJavaVersion)
    }
}

java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}"}
    }
}

publishing {
    publications {
        create("mavenJava", MavenPublication) {
            artifactId = project.archives_base_name
            from components.java
        }
    }
}